#!/usr/bin/env bash

port=${1:-${PORT:-8080}}

if [ -z "$NGROK_API_TOKEN" ]; then
  echo "You must set the NGROK_API_TOKEN config var to create a TCP tunnel!"
  exit 1
fi

# Starting Screen
limit=$(ulimit -u)
case $limit in
  512)   # 2X Dyno
  heap="768m"
  ;;
  32768) # PX Dyno
  heap="4g"
  ;;
  *)     # 1X Dyno
  heap="384m"
  ;;
esac

echo "Starting Screen"
eval "screen -L -h 2048 -dmS 1"
main_pid=$!

# Start Virtual Framebuffer 'fake' X server
echo "Start Virtual Framebuffer 'fake' X server..."
xvfb_cmd="X :1 -screen 1360x768x32 -fbdir $HOME/.apt/var/run/xvfb -nolisten unix"
eval $xvfb_cmd
xvfb_pid=$!

# Start VNC server
echo "Start VNC server..."
vnc_cmd="x11vnc -display :1 -forever -geometry 1360x768 -rfbport 5901"
eval $vnc_cmd
vnc_pid=$!

# Start the TCP tunnel
ngrok_cmd="bin/ngrok start -config bin/config-ngrok.yml vnc"
echo "Starting ngrok..."
eval "$ngrok_cmd | tee ngrok.log &"
ngrok_pid=$!

# Flush the logfile every second, and ensure that the logfile exists
screen -X "logfile 1" && sleep 1
echo "Tailing log"
eval "tail -f screenlog.0 &"
tail_pid=$!

trap "kill $xvfb_pid $vnc_pid $ngrok_pid $main_pid $tail_pid" SIGTERM
trap "kill -9 $xvfb_pid $vnc_pid $ngrok_pid $main_pid $tail_pid; exit" SIGKILL

eval "ruby -rwebrick -e'WEBrick::HTTPServer.new(:BindAddress => \"0.0.0.0\", :Port => ${port}, :MimeTypes => {\"rhtml\" => \"text/html\"}, :DocumentRoot => Dir.pwd).start'"
