#!/usr/bin/env bash

if [ -z "$NGROK_API_TOKEN" ]; then
  echo "You must set the NGROK_API_TOKEN config var to create a TCP tunnel!"
  exit 1
fi

# Starting Screen
limit=$(ulimit -u)
case $limit in
  512)   # 2X Dyno
  heap="768m"
  ;;
  32768) # PX Dyno
  heap="4g"
  ;;
  *)     # 1X Dyno
  heap="384m"
  ;;
esac

echo "Starting Screen"
eval "screen -L -h 2048 -dmS 1"
main_pid=$!

# Start Virtual Framebuffer 'fake' X server
WIDTH=1280
HEIGHT=800
x11_cmd=x11vnc
if [[ ! -z $(pgrep ${x11_cmd}) ]]; then
	pkill ${x11_cmd}
fi
MODE=$(gtf ${WIDTH} ${HEIGHT} 60| egrep -v '#' |  awk '{first = $1; $1 = ""; print $0, first; }')
MODE_NAME=$(echo ${MODE} | awk '{ print $1}')
OFFSET=$(xrandr | grep primary | awk '{ print $4}' | sed 's/\([0-9]*\)\(.*\)/\1/')
PRIMARY=$(xrandr | grep primary | awk '{print $1}')
VIRTUAL=VIRTUAL1
xrandr --newmode ${MODE} 2> /dev/null
xrandr --addmode ${VIRTUAL} ${MODE_NAME} 2> /dev/null
xrandr --output ${VIRTUAL} --right-of ${PRIMARY}
x11start_cmd="x11vnc -display $DISPLAY -rfbport 5901 -noxdamage -bg -forever -geometryn ${WIDTH}x${HEIGHT}"
eval $x11start_cmd

# Start the TCP tunnel
ngrok_cmd="bin/ngrok start -config bin/config-ngrok.yml vnc"
echo "Starting ngrok..."
eval "$ngrok_cmd | tee ngrok.log &"
ngrok_pid=$!

# Flush the logfile every second, and ensure that the logfile exists
screen -X "logfile 1" && sleep 1
echo "Tailing log"
eval "tail -f screenlog.0 &"
tail_pid=$!

trap "kill $ngrok_pid $main_pid $tail_pid" SIGTERM
trap "kill -9 $ngrok_pid $main_pid $tail_pid; exit" SIGKILL

eval "ruby -rwebrick -e'WEBrick::HTTPServer.new(:BindAddress => \"0.0.0.0\", :Port => 5901, :MimeTypes => {\"rhtml\" => \"text/html\"}, :DocumentRoot => Dir.pwd).start'"
