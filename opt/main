#!/usr/bin/env bash

if [ -z "$NGROK_API_TOKEN" ]; then
  echo "You must set the NGROK_API_TOKEN config var to create a TCP tunnel!"
  exit 1
fi

# Starting Screen
limit=$(ulimit -u)
case $limit in
  512)   # 2X Dyno
  heap="768m"
  ;;
  32768) # PX Dyno
  heap="4g"
  ;;
  *)     # 1X Dyno
  heap="384m"
  ;;
esac

echo "Starting Screen"
eval "screen -L -h 2048 -dmS 1"
main_pid=$!

# Set up VNC Password
echo "Setting up VNC Password..."
vnc_cmd="tightvncpasswd -f <<<\"123456\" >\"$HOME/.apt/usr/bin/vncpasswd\""

# Start the VNC Server
ngrok_cmd="tightvncserver -localhost no -rfbport 5901 -geometry 1600Ã—900 -depth 24 -rfbauth \"$BUILD_DIR/bin/vncpasswd\""
echo "Starting VNC Server..."

# Start the TCP tunnel
ngrok_cmd="bin/ngrok start -config bin/config-ngrok.yml vnc"
echo "Starting ngrok..."
eval "$ngrok_cmd | tee ngrok.log &"
ngrok_pid=$!

# Flush the logfile every second, and ensure that the logfile exists
screen -X "logfile 1" && sleep 1
echo "Tailing log"
eval "tail -f screenlog.0 &"
tail_pid=$!

trap "kill $ngrok_pid $main_pid $tail_pid" SIGTERM
trap "kill -9 $ngrok_pid $main_pid $tail_pid; exit" SIGKILL

eval "ruby -rwebrick -e'WEBrick::HTTPServer.new(:BindAddress => \"0.0.0.0\", :Port => 5901, :MimeTypes => {\"rhtml\" => \"text/html\"}, :DocumentRoot => Dir.pwd).start'"
